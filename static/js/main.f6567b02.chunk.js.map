{"version":3,"sources":["components/form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setStatus","setInputText","inputText","todos","setTodos","value","onChange","e","target","type","className","class","onClick","preventDefault","console","log","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6567b02.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({setStatus,setInputText,inputText, todos, setTodos}) => {\n    const inputTextHandler=(e)=> {\n        setInputText(e.target.value);\n    };\n    const submitTodoHandler=(e)=>{\n        e.preventDefault();\n        console.log(e)\n        setTodos([\n            ...todos, \n            {\n                text: inputText, \n                completed: false,\n                id:Math.random()*1000\n            }]);\n            setInputText(\"\");\n    };\nconst statusHandler=(e)=>{\n    console.log(e.target.value);\n    setStatus(e.target.value);\n}\n    return (\n        <form>\n            <input value= {inputText} onChange={inputTextHandler}type=\"text\" className=\"todo-input\" />\n            <button class=\"todo-button\" type=\"submit\" onClick={submitTodoHandler}>\n                <i class=\"fas fa-plus-square\"></i>\n            </button>\n            <div class=\"select\">\n                <select onChange={statusHandler}name=\"todos\" className=\"filter-todo\">\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n        </form>\n    );\n};\n\nexport default Form;\n","import React from 'react';\n\nconst Todo=({text,todo, todos,setTodos})=>{\n    const deleteHandler=()=>{\n        setTodos(todos.filter(el=>el.id!==todo.id));\n    }\n    const completeHandler=()=>{\n        setTodos(todos.map((item)=>{\n            if(item.id===todo.id){\n                return{\n                    ...item,\n                    completed:!item.completed,\n                };\n            }\n            return item\n        })\n        );\n    };\n    return(\n        <div className=\"todo\">\n            <li \n            className={`todo-item ${todo.completed ? \"completed\" :\"\"}`}>\n                {text}</li>\n            <button \n            onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList=({todos, setTodos, filteredTodos})=>{\n    return(\n    <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n           {filteredTodos.map(todo=>(\n               <Todo \n               setTodos= {setTodos} \n               todos={todos} \n               text={todo.text} \n               key={todo.id}\n               todo={todo}\n               />\n           ))}\n        </ul>\n    </div>\n    );\n}\n\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n//component import\nimport Form from \"./components/form.js\";\nimport TodoList from \"./components/TodoList.js\";\n\nfunction App() {\n    //state\n    const [inputText, setInputText] = useState(\"\");\n    const [todos, setTodos] = useState([]);\n    const [status, setStatus] = useState(\"all\");\n    const [filteredTodos, setFilteredTodos] = useState([]);\n    //use effect RUN ONCE\n    useEffect(() => {\n        getLocalTodos();\n    }, []);\n\n    //Use effect\n    useEffect(() => {\n        filterHandler();\n        saveLocalTodos();\n    }, [todos, status]);\n    //functions\n    const filterHandler = () => {\n        switch (status) {\n            case \"completed\":\n                setFilteredTodos(\n                    todos.filter((todo) => todo.completed == true)\n                );\n                break;\n            case \"uncompleted\":\n                setFilteredTodos(\n                    todos.filter((todo) => todo.completed == false)\n                );\n                break;\n            default:\n                setFilteredTodos(todos);\n                break;\n        }\n    };\n\n    //save to local memory\n    const saveLocalTodos = () => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n\n    const getLocalTodos = () => {\n        if (localStorage.getItem(\"todos\") == null) {\n            localStorage.setItem(\"todos\", JSON.stringify([]));\n        } else {\n            let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n            setTodos(todoLocal);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Andrew's Todo list</h1>\n            </header>\n            <Form\n                inputText={inputText}\n                todos={todos}\n                setTodos={setTodos}\n                setInputText={setInputText}\n                setStatus={setStatus}\n            />\n            <TodoList\n                filteredTodos={filteredTodos}\n                setTodos={setTodos}\n                todos={todos}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}